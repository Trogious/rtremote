name: main test suite

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    - name: 0.9.8
      env:
        PYTHONPATH: .
        RTR_SCGI_SOCKET_PATH: ./.rtorrent.sock
        RTR_SYSTEM_CLIENT_VERSION: 0.9.8
        RTR_SYSTEM_API_VERSION: 10
      run: |
        7zr e ./test/deps/rtorrent-0.9.8.7z
        ./rtorrent-0.9.8 -n -o system.daemon.set=true -o network.xmlrpc.size_limit.set=2097152 -o throttle.global_down.max_rate.set=1024 -o throttle.global_up.max_rate.set=1024 -o throttle.max_peers.normal.set=100 -o throttle.max_peers.seed.set=-1 -o throttle.max_uploads.global.set=100 -o throttle.min_peers.normal.set=1 -o throttle.min_peers.seed.set=2 -o encoding.add=UTF-8 -o network.port_random.set=no -o network.port_range.set=22400-22400 -o network.scgi.open_local=./.rtorrent.sock -o network.max_open_files.set=8000 -o file.prioritize_toc.set=1 -o load.normal='test/deps/torrents/*.torrent' &
        ./start.sh &
        pytest ./test
        wss_pid=`cat ./wss_server.pid`
        kill $wss_pid
        test -f ./wss_server.pid && kill -9 $wss_pid
        kill -9 `pidof rtorrent-0.9.8`
    - name: 0.9.7
      env:
        PYTHONPATH: .
        RTR_SCGI_SOCKET_PATH: ./.rtorrent.sock
        RTR_SYSTEM_CLIENT_VERSION: 0.9.7
        RTR_SYSTEM_API_VERSION: 9
      run: |
        7zr e ./test/deps/rtorrent-0.9.7.7z
        ./rtorrent-0.9.7 -n -o system.daemon.set=true -o network.xmlrpc.size_limit.set=2097152 -o throttle.global_down.max_rate.set=1024 -o throttle.global_up.max_rate.set=1024 -o throttle.max_peers.normal.set=100 -o throttle.max_peers.seed.set=-1 -o throttle.max_uploads.global.set=100 -o throttle.min_peers.normal.set=1 -o throttle.min_peers.seed.set=2 -o encoding.add=UTF-8 -o network.port_random.set=no -o network.port_range.set=22400-22400 -o network.scgi.open_local=./.rtorrent.sock -o network.max_open_files.set=8000 -o file.prioritize_toc.set=1 -o load.normal='test/deps/torrents/*.torrent' &
        ./start.sh &
        pytest ./test
        wss_pid=`cat ./wss_server.pid`
        kill $wss_pid
        test -f ./wss_server.pid && kill -9 $wss_pid
        kill -9 `pidof rtorrent-0.9.7`
    - name: setup env 0.9.6
      run: |
        mkdir -p ~/.terminfo/s
        cp ./test/deps/xterm ~/.terminfo/s/screen
        sudo mkdir -p /run/screen
        sudo chmod 777 /run/screen
    - name: 0.9.6
      env:
        TERM: screen
        PYTHONPATH: .
        RTR_SCGI_SOCKET_PATH: ./.rtorrent.sock
        RTR_SYSTEM_CLIENT_VERSION: 0.9.6
        RTR_SYSTEM_API_VERSION: 9
      run: |
        7zr e ./test/deps/rtorrent-0.9.6.7z
        screen -dm ./rtorrent-0.9.6 -n -o network.xmlrpc.size_limit.set=2097152 -o throttle.global_down.max_rate.set=1024 -o throttle.global_up.max_rate.set=1024 -o throttle.max_peers.normal.set=100 -o throttle.max_peers.seed.set=-1 -o throttle.max_uploads.global.set=100 -o throttle.min_peers.normal.set=1 -o throttle.min_peers.seed.set=2 -o encoding.add=UTF-8 -o network.port_random.set=no -o network.port_range.set=22400-22400 -o network.scgi.open_local=./.rtorrent.sock -o network.max_open_files.set=8000 -o file.prioritize_toc.set=1 -o load.normal='test/deps/torrents/*.torrent'
        ./start.sh &
        pytest ./test
        wss_pid=`cat ./wss_server.pid`
        kill $wss_pid
        test -f ./wss_server.pid && kill -9 $wss_pid
        kill -9 `pidof rtorrent-0.9.6`
  deploy:
    needs: test
    if: contains(github.ref, 'tags/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: prepare release
      id: prepare_release
      run: |
        TAG_NAME=`echo $GITHUB_REF | cut -d / -f3`
        echo ::set-output name=tag_name::$TAG_NAME
    - name: install dependencies
      if: startsWith(steps.prepare_release.outputs.tag_name, 'v')
      run: |
        python -m pip install --upgrade pip
        pip install python-minifier
    - name: assemble package
      id: asseemble_package
      if: success()
      run: |
        RTDIR_V=${{github.event.repository.name}}-${{steps.prepare_release.outputs.tag_name}}
        RTDIR=$RTDIR_V/${{github.event.repository.name}}
        mkdir -p $RTDIR
        for f in diffs.py model.py remote.py rpc.py scgi.py server_wss.py utils.py; do pyminify $f > $RTDIR/$f; done
        sed 's/server_wss\.py/${{github.event.repository.name}}.pyz/' ./start.sh > $RTDIR_V/start.sh
        cd $RTDIR_V
        chmod 755 ./start.sh
        python -m zipapp ${{github.event.repository.name}} -m server_wss:main
        du -shc *
        rm -rf ./${{github.event.repository.name}}
        cd ..
        tar -czvf $RTDIR_V.tgz $RTDIR_V
        du -shc $RTDIR_V.tgz
        echo ::set-output name=package_name::$RTDIR_V.tgz
    - name: create release
      id: create_release
      if: steps.prepare_release.outputs.tag_name
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: ${{steps.prepare_release.outputs.tag_name}}
        release_name: Release ${{steps.prepare_release.outputs.tag_name}}
        draft: false
        prerelease: false
    - name: upload package
      if: steps.create_release.outputs.upload_url && steps.asseemble_package.outputs.package_name
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./${{steps.asseemble_package.outputs.package_name}}
        asset_name: ${{steps.asseemble_package.outputs.package_name}}
        asset_content_type: application/gzip
